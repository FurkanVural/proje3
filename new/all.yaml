apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    app: mysql
spec:
  capacity:
    storage: 6Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  nfs:
    path: /
    server: 10.255.255.10
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wordpress-pv1
spec:
  capacity:
    storage: 6Gi  # Capacity matches the WordPress PVC's requested storage
  volumeMode: Filesystem  # Filesystem is typically used
  accessModes:
    - ReadWriteOnce  # Matches the WordPress PVC's access mode
  persistentVolumeReclaimPolicy: Retain  # Retain or Delete (matches your preference)
  storageClassName: standard  # Name of the StorageClass to use (matches WordPress PVC)
  hostPath:
    path: /var/www
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-test-claim
  namespace: test
  labels:
    tier: test
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-test-claim
  namespace: test
  labels:
    tier: test
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: test
  labels:
    tier: test
    app: mysql
spec:
  selector:
    matchLabels:
      tier: test
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: test
        app: mysql
    spec:
      containers:
      - name: database
        image: mysql:5.7
        args:
          # mount volume
          - "--ignore-db-dir=lost+found"
        # add root password
        envFrom:
          - secretRef:
              name: wp-db-secrets
        ports:
          - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-test-claim  
    # spec:
    #   containers:
    #   - name: mysql-test
    #     image: mysql:5.6
    #     env:
    #     - name: MYSQL_ROOT_PASSWORD
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_ROOT_PASSWORD
    #     - name: MYSQL_USER
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_USER
    #     - name: MYSQL_PASSWORD
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_PASSWORD
    #     - name: MYSQL_DATABASE
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_DATABASE      
    #     resources:
    #       limits:
    #         memory: "1Gi"
    #         cpu: "250m"
    #     ports:
    #       - containerPort: 3306
    #         name: mysql-test-port
    #     volumeMounts:
    #       - name: mysql-test-pv
    #         mountPath: /var/lib/mysql
    #   volumes:
    #     - name: mysql-test-pv
    #       persistentVolumeClaim:
    #         claimName: mysql-test-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wp-deployment
  namespace: test
  labels:
    tier: test
    app: wordpress
spec:
  selector:
    matchLabels:
      tier: test
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: test
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:5.8.3-php7.4-apache
          ports:
          - containerPort: 80
            name: wordpress
          volumeMounts:
            - name: wordpress-data
              mountPath: /var/www
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql-service.default.svc.cluster.local
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wp-db-secrets
                  key: MYSQL_ROOT_PASSWORD
            - name: WORDPRESS_DB_USER
              value: root
            - name: WORDPRESS_DB_NAME
              value: wordpress
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress-volume
    # spec:
    #   containers:
    #   - image: wordpress:5.6
    #     name: wp-test
    #     env:
    #     - name: WORDPRESS_DB_HOST
    #       value: mysql-test-svc
    #     - name: WORDPRESS_DB_USER
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_USER
    #     - name: WORDPRESS_DB_PASSWORD
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_PASSWORD
    #     - name: WORDPRESS_DB_NAME
    #       valueFrom:
    #         secretKeyRef:
    #           name: mysql-test-secret
    #           key: MYSQL_DATABASE
    #     resources:
    #       limits:
    #         memory: "1Gi"
    #         cpu: "250m"
    #     ports:
    #     - containerPort: 80
    #       name: wp-test-port
    #     volumeMounts:
    #     - name: wp-test-pv
    #       mountPath: /var/www/html
    #   volumes:
    #   - name: wp-test-pv
    #     persistentVolumeClaim:
    #       claimName: wp-test-claim
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mysql
            topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-test-svc
  namespace: test
  labels:
    tier: test
spec:
  selector:
    tier: test
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: wp-test-svc
  namespace: test
  labels:
    tier: test
    app: wordpress
spec:
  selector:
    tier: test
    app: wordpress
  ports:
  - port: 80
    targetPort: 80